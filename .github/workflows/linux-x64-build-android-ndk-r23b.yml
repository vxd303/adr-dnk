name: linux-x64-build-android-ndk-r23 (libamice.so via clang-r416183b1)

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    env:
      AMICE_DIR: ${{ github.workspace }}/amice
      OUT_DIR: ${{ github.workspace }}/out
      CLANG_DIR: ${{ github.workspace }}/clang-r416183b1
      # Clang unstripped (LLVM 12, r416183b1)
      CLANG_UNSTRIPPED_URL: https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/219e6aaa8fecc0ab0df4e691a9645ba778267af2/clang-r416183b1.tar.gz

    steps:
      - name: Checkout (this repo)
        uses: actions/checkout@v4

      - name: Checkout amice source
        uses: actions/checkout@v4
        with:
          repository: fuqiuluo/amice
          ref: master
          path: amice

      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo (amice)
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ${{ env.AMICE_DIR }}/target
          key: ${{ runner.os }}-cargo-amice-${{ hashFiles('amice/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-amice-

      - name: Prepare folders
        run: |
          set -eux
          mkdir -p "$OUT_DIR" "$CLANG_DIR"

      - name: Download unstripped Clang r416183b1 (LLVM 12)
        run: |
          set -eux
          curl -fL "$CLANG_UNSTRIPPED_URL" -o /tmp/clang-r416183b1.tar.gz
          tar -xzf /tmp/clang-r416183b1.tar.gz -C "$CLANG_DIR"
          "$CLANG_DIR/bin/clang++" --version || true
          ls -l "$CLANG_DIR/lib"  || true
          ls -l "$CLANG_DIR/lib64"|| true

      - name: Normalize LLVM dylib name (handle libLLVM-12git.so)
        run: |
          set -eux
          FOUND="$(find "$CLANG_DIR" -maxdepth 3 -type f -name 'libLLVM-12*.so' | head -n1 || true)"
          if [ -z "$FOUND" ]; then
            echo "libLLVM-12*.so not found under $CLANG_DIR"; find "$CLANG_DIR" -maxdepth 3 -name 'libLLVM*.so' -ls || true; exit 1
          fi
          LIBDIR="$(dirname "$FOUND")"
          BASENAME="$(basename "$FOUND")"
          ln -sf "$BASENAME" "$LIBDIR/libLLVM-12.so"
          ln -sf "$BASENAME" "$LIBDIR/libLLVM.so"
          ls -l "$LIBDIR"/libLLVM*.so

          # Export search paths + toolchain C/C++
          {
            echo "LLVM_SYS_120_PREFIX=$CLANG_DIR"
            echo "LD_LIBRARY_PATH=$LIBDIR:${LD_LIBRARY_PATH:-}"
            echo "LIBRARY_PATH=$LIBDIR:${LIBRARY_PATH:-}"
            echo "CC=$CLANG_DIR/bin/clang"
            echo "CXX=$CLANG_DIR/bin/clang++"
            echo "CXXFLAGS=-DLLVM_VERSION_MAJOR=12"
          } >> "$GITHUB_ENV"

          # Nếu có llvm-config, trỏ để llvm-sys dùng luôn
          if [ -x "$CLANG_DIR/bin/llvm-config" ]; then
            echo "LLVM_CONFIG_PATH=$CLANG_DIR/bin/llvm-config" >> "$GITHUB_ENV"
          fi

      - name: Use clang + ld.lld as Rust linker (avoid ld.bfd issues)
        run: |
          set -eux
          # Dùng clang làm linker và ép dùng ld.lld của bộ này
          {
            echo "RUSTFLAGS=-C linker=$CLANG_DIR/bin/clang -C link-arg=-fuse-ld=lld"
            echo "CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_LINKER=$CLANG_DIR/bin/clang"
          } >> "$GITHUB_ENV"

      - name: Patch for LLVM 12 (guard NoProfile enum)
        working-directory: ${{ env.AMICE_DIR }}
        run: |
          set -eux
          f="amice-llvm/cpp/ffi.cc"
          tmp="${f}.tmp"
          awk '
            /ENUM_CASE\(llvm::Attribute::NoProfile, NoProfile\)/ {
              print "#if defined(LLVM_VERSION_MAJOR) && LLVM_VERSION_MAJOR >= 14";
              print $0;
              print "#endif";
              next
            }
            { print }
          ' "$f" > "$tmp"
          mv "$tmp" "$f"
          grep -n "NoProfile" "$f" || true

      - name: Build libamice.so (feature LLVM 12.0)
        working-directory: ${{ env.AMICE_DIR }}
        run: |
          set -eux
          cargo build --release --no-default-features --features llvm12-0
          mkdir -p "$OUT_DIR"
          cp -v target/release/libamice.so "$OUT_DIR/"

      - name: Smoke test:load plugin with this clang
        run: |
          set -eux
          echo 'int main(){return 0;}' > /tmp/t.c
          "$CLANG_DIR/bin/clang" -fpass-plugin="$OUT_DIR/libamice.so" -O2 -xc /tmp/t.c -o /tmp/t

      - name: Upload artifact (libamice.so for clang-r416183b1)
        uses: actions/upload-artifact@v4
        with:
          name: libamice-ndk-r23-clang-r416183b1
          path: ${{ env.OUT_DIR }}/libamice.so
          if-no-files-found: error
